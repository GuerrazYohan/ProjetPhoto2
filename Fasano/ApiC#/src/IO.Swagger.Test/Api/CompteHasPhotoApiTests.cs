/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompteHasPhotoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompteHasPhotoApiTests
    {
        private CompteHasPhotoApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompteHasPhotoApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompteHasPhotoApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompteHasPhotoApi
            //Assert.IsInstanceOfType(typeof(CompteHasPhotoApi), instance, "instance is a CompteHasPhotoApi");
        }

        /// <summary>
        /// Test DeleteCompteHasPhotoItem
        /// </summary>
        [Test]
        public void DeleteCompteHasPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteCompteHasPhotoItem(id);
            
        }
        /// <summary>
        /// Test GetCompteHasPhotoCollection
        /// </summary>
        [Test]
        public void GetCompteHasPhotoCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.GetCompteHasPhotoCollection(page);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetCompteHasPhotoItem
        /// </summary>
        [Test]
        public void GetCompteHasPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetCompteHasPhotoItem(id);
            //Assert.IsInstanceOf<ComponentsschemasCompteHasPhotojsonld> (response, "response is ComponentsschemasCompteHasPhotojsonld");
        }
        /// <summary>
        /// Test PatchCompteHasPhotoItem
        /// </summary>
        [Test]
        public void PatchCompteHasPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //CompteHasPhoto body = null;
            //var response = instance.PatchCompteHasPhotoItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasCompteHasPhotojsonld> (response, "response is ComponentsschemasCompteHasPhotojsonld");
        }
        /// <summary>
        /// Test PostCompteHasPhotoCollection
        /// </summary>
        [Test]
        public void PostCompteHasPhotoCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompteHasPhoto body = null;
            //var response = instance.PostCompteHasPhotoCollection(body);
            //Assert.IsInstanceOf<ComponentsschemasCompteHasPhotojsonld> (response, "response is ComponentsschemasCompteHasPhotojsonld");
        }
        /// <summary>
        /// Test PutCompteHasPhotoItem
        /// </summary>
        [Test]
        public void PutCompteHasPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //CompteHasPhoto body = null;
            //var response = instance.PutCompteHasPhotoItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasCompteHasPhotojsonld> (response, "response is ComponentsschemasCompteHasPhotojsonld");
        }
    }

}
