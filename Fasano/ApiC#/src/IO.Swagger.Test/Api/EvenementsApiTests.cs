/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing EvenementsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EvenementsApiTests
    {
        private EvenementsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EvenementsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EvenementsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EvenementsApi
            //Assert.IsInstanceOfType(typeof(EvenementsApi), instance, "instance is a EvenementsApi");
        }

        /// <summary>
        /// Test DeleteEvenementsItem
        /// </summary>
        [Test]
        public void DeleteEvenementsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteEvenementsItem(id);
            
        }
        /// <summary>
        /// Test GetEvenementsCollection
        /// </summary>
        [Test]
        public void GetEvenementsCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.GetEvenementsCollection(page);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetEvenementsItem
        /// </summary>
        [Test]
        public void GetEvenementsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetEvenementsItem(id);
            //Assert.IsInstanceOf<ComponentsschemasEvenementsjsonld> (response, "response is ComponentsschemasEvenementsjsonld");
        }
        /// <summary>
        /// Test PatchEvenementsItem
        /// </summary>
        [Test]
        public void PatchEvenementsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Evenements body = null;
            //var response = instance.PatchEvenementsItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasEvenementsjsonld> (response, "response is ComponentsschemasEvenementsjsonld");
        }
        /// <summary>
        /// Test PostEvenementsCollection
        /// </summary>
        [Test]
        public void PostEvenementsCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Evenements body = null;
            //var response = instance.PostEvenementsCollection(body);
            //Assert.IsInstanceOf<ComponentsschemasEvenementsjsonld> (response, "response is ComponentsschemasEvenementsjsonld");
        }
        /// <summary>
        /// Test PutEvenementsItem
        /// </summary>
        [Test]
        public void PutEvenementsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Evenements body = null;
            //var response = instance.PutEvenementsItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasEvenementsjsonld> (response, "response is ComponentsschemasEvenementsjsonld");
        }
    }

}
