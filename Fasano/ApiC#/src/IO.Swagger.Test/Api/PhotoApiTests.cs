/* 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PhotoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PhotoApiTests
    {
        private PhotoApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PhotoApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PhotoApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PhotoApi
            //Assert.IsInstanceOfType(typeof(PhotoApi), instance, "instance is a PhotoApi");
        }

        /// <summary>
        /// Test DeletePhotoItem
        /// </summary>
        [Test]
        public void DeletePhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeletePhotoItem(id);
            
        }
        /// <summary>
        /// Test GetPhotoCollection
        /// </summary>
        [Test]
        public void GetPhotoCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.GetPhotoCollection(page);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetPhotoItem
        /// </summary>
        [Test]
        public void GetPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetPhotoItem(id);
            //Assert.IsInstanceOf<ComponentsschemasPhotojsonld> (response, "response is ComponentsschemasPhotojsonld");
        }
        /// <summary>
        /// Test PatchPhotoItem
        /// </summary>
        [Test]
        public void PatchPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Photo body = null;
            //var response = instance.PatchPhotoItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasPhotojsonld> (response, "response is ComponentsschemasPhotojsonld");
        }
        /// <summary>
        /// Test PostPhotoCollection
        /// </summary>
        [Test]
        public void PostPhotoCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Photo body = null;
            //var response = instance.PostPhotoCollection(body);
            //Assert.IsInstanceOf<ComponentsschemasPhotojsonld> (response, "response is ComponentsschemasPhotojsonld");
        }
        /// <summary>
        /// Test PutPhotoItem
        /// </summary>
        [Test]
        public void PutPhotoItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Photo body = null;
            //var response = instance.PutPhotoItem(id, body);
            //Assert.IsInstanceOf<ComponentsschemasPhotojsonld> (response, "response is ComponentsschemasPhotojsonld");
        }
    }

}
